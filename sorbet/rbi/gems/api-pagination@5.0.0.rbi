# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `api-pagination` gem.
# Please instead update this file by running `bin/tapioca gem api-pagination`.

# source://api-pagination//lib/api-pagination/configuration.rb#1
module ApiPagination
  class << self
    # source://api-pagination//lib/api-pagination/configuration.rb#132
    def config; end

    # source://api-pagination//lib/api-pagination/configuration.rb#132
    def configuration; end

    # @yield [config]
    #
    # source://api-pagination//lib/api-pagination/configuration.rb#128
    def configure; end

    # source://api-pagination//lib/api-pagination.rb#23
    def pages_from(collection, options = T.unsafe(nil)); end

    # source://api-pagination//lib/api-pagination.rb#6
    def paginate(collection, options = T.unsafe(nil)); end

    # source://api-pagination//lib/api-pagination.rb#39
    def total_from(collection); end

    private

    # source://api-pagination//lib/api-pagination.rb#124
    def default_per_page_for_will_paginate(collection); end

    # source://api-pagination//lib/api-pagination.rb#129
    def extract_per_page_from_model(collection, accessor); end

    # source://api-pagination//lib/api-pagination.rb#119
    def get_default_per_page_for_kaminari(collection); end

    # source://api-pagination//lib/api-pagination.rb#90
    def paginate_with_kaminari(collection, options, paginate_array_options = T.unsafe(nil)); end

    # source://api-pagination//lib/api-pagination.rb#49
    def paginate_with_pagy(collection, options); end

    # source://api-pagination//lib/api-pagination.rb#103
    def paginate_with_will_paginate(collection, options); end

    # source://api-pagination//lib/api-pagination.rb#66
    def pagy_from(collection, options); end

    # source://api-pagination//lib/api-pagination.rb#76
    def pagy_pages_from(pagy); end
  end
end

# source://api-pagination//lib/api-pagination/configuration.rb#2
class ApiPagination::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#19
  def initialize; end

  # Returns the value of attribute base_url.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#11
  def base_url; end

  # Sets the attribute base_url
  #
  # @param value the value to set the attribute base_url to.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#11
  def base_url=(_arg0); end

  # @yield [_self]
  # @yieldparam _self [ApiPagination::Configuration] the object that the method was called on
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#15
  def configure(&block); end

  # Returns the value of attribute include_total.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#9
  def include_total; end

  # Sets the attribute include_total
  #
  # @param value the value to set the attribute include_total to.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#9
  def include_total=(_arg0); end

  # Returns the value of attribute page_header.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#7
  def page_header; end

  # Sets the attribute page_header
  #
  # @param value the value to set the attribute page_header to.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#7
  def page_header=(_arg0); end

  # source://api-pagination//lib/api-pagination/configuration.rb#32
  def page_param(params = T.unsafe(nil), &block); end

  # source://api-pagination//lib/api-pagination/configuration.rb#46
  def page_param=(param); end

  # source://api-pagination//lib/api-pagination/configuration.rb#55
  def paginator; end

  # source://api-pagination//lib/api-pagination/configuration.rb#63
  def paginator=(paginator); end

  # Returns the value of attribute per_page_header.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#5
  def per_page_header; end

  # Sets the attribute per_page_header
  #
  # @param value the value to set the attribute per_page_header to.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#5
  def per_page_header=(_arg0); end

  # source://api-pagination//lib/api-pagination/configuration.rb#32
  def per_page_param(params = T.unsafe(nil), &block); end

  # source://api-pagination//lib/api-pagination/configuration.rb#46
  def per_page_param=(param); end

  # Returns the value of attribute response_formats.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#13
  def response_formats; end

  # Sets the attribute response_formats
  #
  # @param value the value to set the attribute response_formats to.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#13
  def response_formats=(_arg0); end

  # Returns the value of attribute total_header.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#3
  def total_header; end

  # Sets the attribute total_header
  #
  # @param value the value to set the attribute total_header to.
  #
  # source://api-pagination//lib/api-pagination/configuration.rb#3
  def total_header=(_arg0); end

  private

  # source://api-pagination//lib/api-pagination/configuration.rb#78
  def set_paginator; end

  # source://api-pagination//lib/api-pagination/configuration.rb#112
  def use_kaminari; end

  # source://api-pagination//lib/api-pagination/configuration.rb#108
  def use_pagy; end

  # source://api-pagination//lib/api-pagination/configuration.rb#117
  def use_will_paginate; end
end

# source://api-pagination//lib/api-pagination/hooks.rb#31
module ApiPagination::Hooks
  class << self
    # source://api-pagination//lib/api-pagination/hooks.rb#32
    def rails_parent_controller; end
  end
end

# source://api-pagination//lib/api-pagination/railtie.rb#4
class ApiPagination::Railtie < ::Rails::Railtie; end

# source://api-pagination//lib/api-pagination/version.rb#12
ApiPagination::VERSION = T.let(T.unsafe(nil), String)

# source://api-pagination//lib/api-pagination/version.rb#2
class ApiPagination::Version
  class << self
    # source://api-pagination//lib/api-pagination/version.rb#7
    def to_s; end
  end
end

# source://api-pagination//lib/api-pagination/version.rb#3
ApiPagination::Version::MAJOR = T.let(T.unsafe(nil), Integer)

# source://api-pagination//lib/api-pagination/version.rb#4
ApiPagination::Version::MINOR = T.let(T.unsafe(nil), Integer)

# source://api-pagination//lib/api-pagination/version.rb#5
ApiPagination::Version::PATCH = T.let(T.unsafe(nil), Integer)
